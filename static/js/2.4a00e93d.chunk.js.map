{"version":3,"file":"static/js/2.4a00e93d.chunk.js","mappings":"8LACaA,E,QAAgBC,GAAAA,IAAH,gH,SCEbC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,oBACVC,OAAO,IACPC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,0KCfYC,EAAUV,EAAAA,GAAAA,QAAH,sDAIPW,EAAQX,EAAAA,GAAAA,GAAH,qIAQLY,EAAOZ,EAAAA,GAAAA,GAAH,wGAOJa,GAAab,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,yJ,SCJvB,EAfkB,SAAC,GAAwB,IAAtBe,EAAqB,EAArBA,eACnB,OACE,UAACL,EAAD,YACE,SAACC,EAAD,UAAO,oBACP,SAACC,EAAD,UACGG,EAAeC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAClB,yBACE,SAACL,EAAD,CAAYM,GAAE,kBAAaF,GAA3B,SAAkCC,KAD3BD,EADS,QAQ3B,E,UCdYG,EAAOpB,EAAAA,GAAAA,EAAH,yHCwCjB,EApCa,WACX,OAA4BqB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,sGAExBF,GAAS,GACTF,GAAa,GAHW,UAIEK,EAAAA,EAAAA,MAJF,gBAIhBC,EAJgB,EAIhBA,QACRR,EAAUQ,GALc,kDAOxBJ,GAAS,GAPe,yBASxBF,GAAa,GATW,6EAAH,qDAYzBI,GACD,GAAE,KAGD,8BACGL,GACC,SAACvB,EAAA,EAAD,IACEyB,GACF,SAACN,EAAD,UAAM,4EAIN,SAAC,EAAD,CAAWL,eAAgBO,KAIlC,C,mMCtCKU,EAAW,+BACXC,EAAU,mCAEHH,EAAgB,mCAAG,sGACPI,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBC,IAFd,uBACtBE,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeC,EADf,iCAC+CI,EAD/C,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBG,EAAc,mCAAG,WAAMrB,GAAN,yFACLiB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAf,EADA,4BACsBgB,EADtB,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdI,EAAc,mCAAG,WAAMtB,GAAN,yFACLiB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAf,EADA,oBACcgB,EADd,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdK,EAAiB,mCAAG,WAAMvB,GAAN,yFACRiB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAf,EADA,6BACuBgB,EADvB,2BADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100px;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <TailSpin\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"tail-spin-loading\"\n        radius=\"1\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </LoaderWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding: 0 40px 20px 40px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 25px;\n  margin-bottom: 30px;\n  font-size: 35px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  list-style: none;\n`;\n\nexport const OptionLink = styled(Link)`\n  color: #29557e;\n  font-size: 20px;\n  &:hover,\n  &:focus {\n    color: #0f71c7;\n    border-bottom: 2px solid #0f71c7;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Section, OptionLink, Title, List } from './MovieList.styled';\n\nconst MovieList = ({ trendingMovies }) => {\n  return (\n    <Section>\n      <Title>Trending today</Title>\n      <List>\n        {trendingMovies.map(({ id, title }) => (\n          <li key={id}>\n            <OptionLink to={`/movies/${id}`}>{title}</OptionLink>\n          </li>\n        ))}\n      </List>\n    </Section>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  margin-bottom: 18px;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchTrendMovies } from '../../services/fetchMovies';\nimport MovieList from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Text } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setError(false);\n        setIsLoading(true);\n        const { results } = await fetchTrendMovies();\n        setMovies(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : error ? (\n        <Text>\n          Sorry, we could not fetch the trending movies. Please try again later.\n        </Text>\n      ) : (\n        <MovieList trendingMovies={movies} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0bd052a36cb17fd9656e5b38bc680abf';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieByName = async name => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["LoaderWrapper","styled","Loader","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","Section","Title","List","OptionLink","Link","trendingMovies","map","id","title","to","Text","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","fetchTrendMovies","results","BASE_URL","API_KEY","axios","data","fetchMovieByName","name","fetchMovieCast","fetchMovieById","fetchMovieReviews"],"sourceRoot":""}