{"version":3,"file":"static/js/779.26efb229.chunk.js","mappings":"8RAEaA,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAcD,EAAAA,GAAAA,GAAH,oHAOXE,EAAaF,EAAAA,GAAAA,GAAH,yHAQVG,EAAiBH,EAAAA,GAAAA,GAAH,sFAKdI,EAASJ,EAAAA,GAAAA,GAAH,yFAMNK,EAASL,EAAAA,GAAAA,EAAH,6CAINM,EAASN,EAAAA,GAAAA,EAAH,mN,SCWnB,EAlCgB,WACd,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAESC,EAAAA,EAAAA,IAAkBJ,GAF3B,gBAETK,EAFS,EAETA,QACRN,EAAWM,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBJ,GACD,GAAE,CAACH,KAGF,UAACX,EAAD,YACE,SAACE,EAAD,UAAa,YACZO,EAAQU,QACP,SAAChB,EAAD,CAAYiB,UAAU,oBAAtB,SACGX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACpB,EAAD,CAAgBgB,UAAU,cAA1B,WACE,UAACf,EAAD,WAAQ,WAASkB,MACjB,SAACjB,EAAD,UAASkB,MAFkCF,EADlC,OAQf,SAACf,EAAD,UAAQ,gDAIf,C,mMC5CKkB,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CK,EAD/C,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBG,EAAc,mCAAG,WAAMV,GAAN,yFACLM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,4BACsBI,EADtB,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdI,EAAc,mCAAG,WAAMX,GAAN,yFACLM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,oBACcI,EADd,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdd,EAAiB,mCAAG,WAAMO,GAAN,yFACRM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,6BACuBI,EADvB,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 40px;\n`;\n\nexport const ReviewTitle = styled.h3`\ntext-transform: uppercase;\n  font-size: 26px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const ReviewList = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  flex-wrap: wrap;\n  margin-top: 40px;\n`;\n\nexport const ReviewListItem = styled.li`\n  padding-bottom: 15px;\n  border-bottom: 1px solid #c0bdbd;\n`;\n\nexport const Author = styled.h4`\n  margin-bottom: 15px;\n  font-size: 22px;\n  font-weight: 500;\n`;\n\nexport const Review = styled.p`\n  line-height: 1.4;\n`;\n\nexport const NoInfo = styled.p`\n  margin: 30px auto 0 auto;\n  padding: 20px;\n  text-align: center;\n  max-width: 500px;\n  border-radius: 5px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n  background-color: #f8f8f8;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../services/fetchMovies';\nimport {\n  Author,\n  NoInfo,\n  Review,\n  ReviewTitle,\n  ReviewList,\n  ReviewListItem,\n  Container,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { results } = await fetchMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <Container>\n      <ReviewTitle>Reviews</ReviewTitle>\n      {reviews.length ? (\n        <ReviewList className=\"reviews-container\">\n          {reviews.map(({ id, author, content }) => (\n            <ReviewListItem className=\"review-card\" key={id}>\n              <Author>Author: {author}</Author>\n              <Review>{content}</Review>\n            </ReviewListItem>\n          ))}\n        </ReviewList>\n      ) : (\n        <NoInfo>We don't have any reviews for this movie.</NoInfo>\n      )}\n    </Container>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0bd052a36cb17fd9656e5b38bc680abf';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieByName = async name => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["Container","styled","ReviewTitle","ReviewList","ReviewListItem","Author","Review","NoInfo","useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","fetchMovieReviews","results","console","log","length","className","map","id","author","content","BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","name","fetchMovieCast","fetchMovieById"],"sourceRoot":""}