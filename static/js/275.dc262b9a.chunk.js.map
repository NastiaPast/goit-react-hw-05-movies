{"version":3,"file":"static/js/275.dc262b9a.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDelails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100px;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <TailSpin\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"tail-spin-loading\"\n        radius=\"1\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </LoaderWrapper>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 50px;\n  margin-top: 25px;\n`;\n\nexport const Img = styled.img`\n  height: 600px;\n  width: 400px;\n  border-radius: 3px;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n`;\n\nexport const MovieWrapper = styled.div`\n  padding-top: 15px;\n  width: 100%;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: 20px;\n  font-size: 30px;\n`;\n\nexport const MovieInfoText = styled.p`\n  margin-bottom: 20px;\n  font-size: 18px;\n`;\n\nexport const MovieInfoSpan = styled.span`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 24px;\n  font-weight: 500;\n`;\n\nexport const Wrapper = styled.div`\n  margin-top: 15px;\n  padding: 20px 0px;\n  border-top: 1px solid #c0bdbd;\n  border-bottom: 1px solid #c0bdbd;\n`;\n\nexport const InfoTitle = styled.h3`\n  font-size: 24px;\n  font-weight: 600;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 30px;\n  margin-top: 25px;\n  font-size: 18px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const OptionLink = styled(Link)`\n  margin-right: 5px;\n  padding: 5px 15px;\n  border: 1px solid #0d57aa;\n  border-radius: 5px;\n  background-color: #9dc8f0;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\n  text-decoration: none;\n  font-size: 16px;\n  color: #000;\n  &:hover,\n  &:focus {\n    background-color: #508cc5;\n    color: #ffffff;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Img,\n  List,\n  ListItem,\n  Container,\n  MovieWrapper,\n  MovieTitle,\n  MovieInfoSpan,\n  MovieInfoText,\n  Wrapper,\n  InfoTitle,\n  OptionLink,\n} from './MovieCard.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst POSTER_URL = 'https://image.tmdb.org/t/p/w400/';\nconst DEFAULT_POSTER_URL =\n  'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\nconst MovieCard = ({ movie }) => {\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n    movie;\n  const releaseDate = new Date(release_date);\n  const location = useLocation();\n\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  const voteScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'No rating yet';\n\n  const posterUrl = poster_path\n    ? `${POSTER_URL}${poster_path}`\n    : `${DEFAULT_POSTER_URL}`;\n\n  if (!title) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <Container>\n        <Img src={posterUrl} alt={`${title} poster`} />\n        <MovieWrapper>\n          <MovieTitle>\n            {title ?? 'Unknown'} ({releaseYear})\n          </MovieTitle>\n          <MovieInfoText>\n            <MovieInfoSpan>User Score:</MovieInfoSpan>\n            {voteScore}\n          </MovieInfoText>\n          <MovieInfoText>\n            <MovieInfoSpan>Overview:</MovieInfoSpan> {overview}\n          </MovieInfoText>\n          {genres && genres.length > 0 && (\n            <MovieInfoText>\n              <MovieInfoSpan>Genres:</MovieInfoSpan>\n              {genres.map(({ name }) => name).join(', ')}\n            </MovieInfoText>\n          )}\n        </MovieWrapper>\n      </Container>\n      <Wrapper>\n        <InfoTitle>Additional information</InfoTitle>\n        <List>\n          <ListItem>\n            <OptionLink\n              to=\"cast\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Cast\n            </OptionLink>\n          </ListItem>\n          <ListItem>\n            <OptionLink\n              to=\"reviews\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Reviews\n            </OptionLink>\n          </ListItem>\n        </List>\n      </Wrapper>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string })),\n  }),\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 30px 30px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  border: 1px solid #0d57aa;\n  border-radius: 5px;\n  min-width: 100px;\n  background-color: #9dc8f0;\n  font-size: 16px;\n  &:hover,\n  &:focus {\n    background-color: #508cc5;\n    color: #ffffff;\n  }\n`;\n","import { Suspense } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation, Link } from 'react-router-dom';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport { fetchMovieById } from '../../services/fetchMovies';\nimport MovieCard from '../../components/MovieCard/MovieCard';\nimport { Button, Container } from './MovieDelails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDelails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovieDetails = async movieId => {\n      try {\n        const movieData = await fetchMovieById(movieId);\n        setMovieDetails(movieData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovieDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <main>\n      <Container>\n        <Link to={location?.state?.from ?? '/'}>\n          <Button type=\"button\">\n            <BsArrowLeftShort\n              style={{ width: '30px', height: '30px', display: 'inline-block' }}\n            />\n            Go back\n          </Button>\n        </Link>\n        <MovieCard movie={movieDetails} />\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </main>\n  );\n};\n\nexport default MovieDelails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0bd052a36cb17fd9656e5b38bc680abf';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieByName = async name => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["LoaderWrapper","styled","Loader","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","Container","Img","MovieWrapper","MovieTitle","MovieInfoText","MovieInfoSpan","Wrapper","InfoTitle","List","ListItem","OptionLink","Link","movie","title","release_date","poster_path","vote_average","overview","genres","releaseDate","Date","location","useLocation","releaseYear","isNaN","getFullYear","voteScore","toFixed","posterUrl","src","alt","length","map","name","join","to","state","from","Button","useState","movieDetails","setMovieDetails","movieId","useParams","useEffect","fetchMovieDetails","fetchMovieById","movieData","console","log","type","style","display","Suspense","fallback","BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","fetchMovieCast","id","fetchMovieReviews"],"sourceRoot":""}