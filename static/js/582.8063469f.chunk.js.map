{"version":3,"file":"static/js/582.8063469f.chunk.js","mappings":"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","sources":["components/Search/Search.styled.js","components/Search/Search.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  padding: 8px;\n  margin-right: 15px;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  background-color: #9dc8f0;\n  border: 1px solid #0d57aa;\n  border-radius: 4px;\n  padding: 8px 18px;\n  font-size: 16px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: #508cc5;\n    color: #ffffff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-hot-toast';\nimport { Button, Form, Input } from './Search.styled';\n\nconst SearchMovies = ({ onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.target.elements.query.value;\n    if (!query) {\n      toast.error('Enter something in search line');\n      return;\n    }\n    onSubmit(query);\n    event.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        name='query'\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchMovies.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nexport default SearchMovies;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding: 0 40px 20px 40px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 25px;\n  margin-bottom: 30px;\n  font-size: 35px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  list-style: none;\n`;\n\nexport const OptionLink = styled(Link)`\n  color: #29557e;\n  font-size: 20px;\n  &:hover,\n  &:focus {\n    color: #0f71c7;\n    border-bottom: 2px solid #0f71c7;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { fetchMovieByName } from '../../services/fetchMovies';\nimport SearchMovies from '../../components/Search/Search';\nimport { List, Title, OptionLink, Section } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n    const fetchMovie = async () => {\n      try {\n        const { results } = await fetchMovieByName(query);\n        if (results.length === 0) {\n          toast.dismiss();\n          toast.error('Sorry, there are no movies matching your search query.');\n          setMovies([]);\n        } else {\n          setMovies(results);\n        }\n      } catch (error) {\n        toast.error(error.message);\n        setMovies([]);\n      }\n    };\n    fetchMovie();\n  }, [searchParams]);\n\n  const handleSubmit = searchQuery => {\n    const query = searchParams.get('query') ?? '';\n    if (searchQuery === query) {\n      toast.error(`This word has already been searched for. Try another one.`);\n      return;\n    }\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <main>\n      <Section>\n        <Title>Movies Page</Title>\n        <SearchMovies onSubmit={handleSubmit} />\n        <List>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <OptionLink to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </OptionLink>\n            </li>\n          ))}\n        </List>\n      </Section>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0bd052a36cb17fd9656e5b38bc680abf';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieByName = async name => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["Form","styled","Input","Button","onSubmit","event","preventDefault","query","target","elements","value","reset","toast","name","type","autoComplete","autoFocus","placeholder","Section","Title","List","OptionLink","Link","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","get","fetchMovie","fetchMovieByName","results","length","message","Search","searchQuery","map","id","title","to","state","from","BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMovieCast","fetchMovieById","fetchMovieReviews"],"sourceRoot":""}